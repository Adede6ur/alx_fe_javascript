const SERVER_URL = "https://jsonplaceholder.typicode.com/posts"; // Example API
let localQuotes = JSON.parse(localStorage.getItem("quotes")) || [];

// Fetch quotes from "server"
async function fetchServerQuotes() {
  try {
    const res = await fetch(SERVER_URL);
    const data = await res.json();

    // Simulate only the first 5 as quotes
    const serverQuotes = data.slice(0, 5).map(item => ({
      id: item.id,
      text: item.title
    }));

    handleServerSync(serverQuotes);
  } catch (error) {
    console.error("Error fetching server data:", error);
  }
}function handleServerSync(serverQuotes) {
  let updated = false;

  serverQuotes.forEach(serverQuote => {
    const localQuoteIndex = localQuotes.findIndex(q => q.id === serverQuote.id);

    if (localQuoteIndex === -1) {
      // New quote from server
      localQuotes.push(serverQuote);
      updated = true;
    } else if (localQuotes[localQuoteIndex].text !== serverQuote.text) {
      // Conflict → Server wins
      localQuotes[localQuoteIndex] = serverQuote;
      updated = true;
    }
  });

  if (updated) {
    localStorage.setItem("quotes", JSON.stringify(localQuotes));
    notifyUser("Quotes updated from server.");
  function handleServerSync(serverQuotes) {
  let updated = false;

  serverQuotes.forEach(serverQuote => {
    const localQuoteIndex = localQuotes.findIndex(q => q.id === serverQuote.id);

    if (localQuoteIndex === -1) {
      // New quote from server
      localQuotes.push(serverQuote);
      updated = true;
    } else if (localQuotes[localQuoteIndex].text !== serverQuote.text) {
      // Conflict → Server wins
      localQuotes[localQuoteIndex] = serverQuote;
      updated = true;
    }
  });

  if (updated) {
    localStorage.setItem("quotes", JSON.stringify(localQuotes));
    notifyUser("Quotes updated from server.");
  }
function handleServerSync(serverQuotes) {
  let updated = false;

  serverQuotes.forEach(serverQuote => {
    const localQuoteIndex = localQuotes.findIndex(q => q.id === serverQuote.id);

    if (localQuoteIndex === -1) {
      // New quote from server
      localQuotes.push(serverQuote);
      updated = true;
    } else if (localQuotes[localQuoteIndex].text !== serverQuote.text) {
      // Conflict → Server wins
      localQuotes[localQuoteIndex] = serverQuote;
      updated = true;
    }
  });

  if (updated) {
    localStorage.setItem("quotes", JSON.stringify(localQuotes));
    notifyUser("Quotes updated from server.");
  }
}function notifyUser(message) {
  const notification = document.createElement("div");
  notification.textContent = message;
  notification.style.background = "yellow";
  notification.style.padding = "10px";
  notification.style.margin = "10px 0";
  document.body.appendChild(notification);

  setTimeout(() => notification.remove(), 3000);
}